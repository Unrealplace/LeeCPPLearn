//
//  main.cpp
//  C++Demo
//
//  Created by LiYang on 2017/6/7.
//  Copyright © 2017年 LiYang. All rights reserved.
//

#include <iostream>

int main(int argc, const char * argv[]) {
    
    
//    
//    文件流是以外存文件为输入输出对象的数据流。输出文件流是从内存流向外存文件的数据，输入文件流是从外存文件流向内存的数据。每一个文件流都有一个内存缓冲区与之对应。
//    
//    请区分文件流与文件的概念，不用误以为文件流是由若干个文件组成的流。文件流本身不是文件，而只是以文件为输入输出对象的流。若要对磁盘文件输入输出，就必须通过文件流来实现。
//    
//    在C++的I/O类库中定义了几种文件类，专门用于对磁盘文件的输入输出操作。在 图13.2（详情请查看：与C++输入输出有关的类和对象）中可以看到除了标准输入输出流类istream、ostream和iostream类外，还有3个用于文件操作的文件类：
//    ifstream类，它是从istream类派生的，用来支持从磁盘文件的输入。
//    ofstream类，它是从ostream类派生的，用来支持向磁盘文件的输出。
//    fstream类，它是从iostream类派生的，用来支持对磁盘文件的输入输出。
//    
//    要以磁盘文件为对象进行输入输出，必须定义一个文件流类的对象，通过文件流对象将数据从内存输出到磁盘文件，或者通过文件流对象从磁盘文件将数据输入到内存。
//    
//    其实在用标准设备为对象的输入输出中，也是要定义流对象的，如cin、cout就是流对象，C++是通过流对象进行输入输出的。由于cin、cout已在iostream.h中事先定义，所以用户不需自己定义。在用磁盘文件时，由于情况各异，无法事先统一定义，必须由用户自己定义。此外，对磁盘文件的操作是通过文件流对象（而不是cin和cout）实现的。文件流对象是用文件流类定义的，而不是用istream和ostream类来定义的。可以用下面的方法建立一个输出文件流对象：
//    ofstream outfile;
//    如同在头文件iostream中定义了流对象cout —样，现在在程序中定义了outfile为 ofstream类（输出文件流类）的对象。但是有一个问埋还未解决：在定义 cout 时已将它和标准输出设备（显示器）建立关联，而现在虽然建立了一个输出文件流对象，但是还未指定它向哪一个磁盘文件输出，需要在使用时加以指定。下一节即将解答这个问题。

    
    return 0;
}
